b = 4:6)
y <- data.frame(a = letters[1:3],
b = letters[4:6])
compare(x, y)
source('~/GitHub/actuaryr/R/compare.R', echo=TRUE)
source('~/GitHub/actuaryr/R/utils.R', echo=TRUE)
# ex. the same - numericals
x <- data.frame(
a = rep(1, 3),
b = rep(2, 3),
c = rep(3, 3)
)
y <- data.frame(
a = rep(1, 3),
b = rep(2, 3),
c = rep(3, 3)
)
compare(x, y)
# ex. the same - strings
x <- data.frame(a = letters[1:3],
b = letters[4:6],
stringsAsFactors = FALSE)
y <- data.frame(a = letters[1:3],
b = letters[4:6],
stringsAsFactors = FALSE)
compare(x, y)
# ex. the same - factors
x <- data.frame(a = letters[1:3],
b = letters[4:6])
y <- data.frame(a = letters[1:3],
b = letters[4:6])
compare(x, y)
# ex. different amount of columns
x <- data.frame(
a = rep(1, 3),
b = rep(2, 3),
c = rep(3, 3)
)
y <- data.frame(
a = rep(1, 3),
b = rep(2, 3)
)
compare(x, y)
# ex. different amount of columns
x <- data.frame(
a = rep(1, 3),
b = rep(2, 3),
c = rep(3, 3)
)
y <- data.frame(
a = rep(1, 3),
b = rep(2, 3)
)
compare(x, y)
source('~/GitHub/actuaryr/R/utils.R')
# ex. the same - numericals
x <- data.frame(
a = rep(1, 3),
b = rep(2, 3),
c = rep(3, 3)
)
y <- data.frame(
a = rep(1, 3),
b = rep(2, 3),
c = rep(3, 3)
)
compare(x, y)
# ex. the same - strings
x <- data.frame(a = letters[1:3],
b = letters[4:6],
stringsAsFactors = FALSE)
y <- data.frame(a = letters[1:3],
b = letters[4:6],
stringsAsFactors = FALSE)
compare(x, y)
# ex. the same - factors
x <- data.frame(a = letters[1:3],
b = letters[4:6])
y <- data.frame(a = letters[1:3],
b = letters[4:6])
compare(x, y)
# ex. the same - factors
x <- data.frame(a = letters[1:3],
b = letters[4:6])
y <- data.frame(a = letters[1:3],
b = letters[4:6])
compare(x, y)
source('~/GitHub/actuaryr/R/utils.R')
# ex. the same - factors
x <- data.frame(a = letters[1:3],
b = letters[4:6])
y <- data.frame(a = letters[1:3],
b = letters[4:6])
compare(x, y)
source('~/GitHub/actuaryr/R/utils.R')
# ex. the same - factors
x <- data.frame(a = letters[1:3],
b = letters[4:6])
y <- data.frame(a = letters[1:3],
b = letters[4:6])
compare(x, y)
# ex. different amount of columns
x <- data.frame(
a = rep(1, 3),
b = rep(2, 3),
c = rep(3, 3)
)
y <- data.frame(
a = rep(1, 3),
b = rep(2, 3)
)
compare(x, y)
.getCommonColumns <- function(tables) {
x <- tables$x
y <- tables$y
not.in.x <- colnames(y)[!c(colnames(y) %in% colnames(x))]
not.in.y <- colnames(x)[!c(colnames(x) %in% colnames(y))]
if(length(not.in.x) > 0) {
cat(crayon::yellow(paste0("Column(s) '", not.in.x, "' are not in",
crayon::bold("y"), "so they have been removed
from the comparison.\n")))
}
if(length(not.in.y) > 0) {
cat(crayon::yellow(paste0("Column(s) '", not.in.y, "' are not in",
crayon::bold("x"), "so they have been removed
from the comparison.\n")))
}
common.columns <- colnames(x)[colnames(x) %in% colnames(y)]
x <- x[, common.columns]
y <- y[, common.columns]
tables <- list(x = x, y = y)
return(tables)
}
# ex. different amount of columns
x <- data.frame(
a = rep(1, 3),
b = rep(2, 3),
c = rep(3, 3)
)
y <- data.frame(
a = rep(1, 3),
b = rep(2, 3)
)
compare(x, y)
if(length(not.in.x) > 0) {
cat(crayon::yellow(paste0("Column(s) '", not.in.x, "' are not in",
crayon::bold("y"), "so they have been removed from the comparison.\n")))
}
if(length(not.in.y) > 0) {
cat(crayon::yellow(paste0("Column(s) '", not.in.y, "' are not in",
crayon::bold("x"), "so they have been removed from the comparison.\n")))
}
source('~/GitHub/actuaryr/R/utils.R')
y <- data.frame(a = letters[1:3],
b = letters[4:6],
stringsAsFactors = FALSE)
compare(x, y)
# ex. the same - factors
x <- data.frame(a = letters[1:3],
b = letters[4:6])
y <- data.frame(a = letters[1:3],
b = letters[4:6])
compare(x, y)
# ex. different amount of columns
x <- data.frame(
a = rep(1, 3),
b = rep(2, 3),
c = rep(3, 3)
)
y <- data.frame(
a = rep(1, 3),
b = rep(2, 3)
)
compare(x, y)
source('~/GitHub/actuaryr/R/utils.R')
# ex. different amount of columns
x <- data.frame(
a = rep(1, 3),
b = rep(2, 3),
c = rep(3, 3)
)
y <- data.frame(
a = rep(1, 3),
b = rep(2, 3)
)
compare(x, y)
# ex. factors / Dates / POSIXct
x <- data.frame(a = 1:3,
b = 4:6)
y <- data.frame(a = letters[1:3],
b = letters[4:6])
compare(x, y)
source('~/GitHub/actuaryr/R/utils.R')
# ex. different number of rows
x <- data.frame(
a = rep(1, 2),
b = rep(2, 2),
c = rep(3, 2)
)
y <- data.frame(
a = rep(1, 3),
b = rep(2, 3),
c = rep(3, 3)
)
compare(x, y)
source('~/GitHub/actuaryr/R/utils.R')
# ex. different number of rows
x <- data.frame(
a = rep(1, 2),
b = rep(2, 2),
c = rep(3, 2)
)
y <- data.frame(
a = rep(1, 3),
b = rep(2, 3),
c = rep(3, 3)
)
compare(x, y)
source('~/GitHub/actuaryr/R/utils.R')
source('~/GitHub/actuaryr/R/utils.R')
# ex. different number of rows
x <- data.frame(
a = rep(1, 2),
b = rep(2, 2),
c = rep(3, 2)
)
y <- data.frame(
a = rep(1, 3),
b = rep(2, 3),
c = rep(3, 3)
)
compare(x, y)
source('~/GitHub/actuaryr/R/utils.R')
# ex. different number of rows
x <- data.frame(
a = rep(1, 2),
b = rep(2, 2),
c = rep(3, 2)
)
y <- data.frame(
a = rep(1, 3),
b = rep(2, 3),
c = rep(3, 3)
)
compare(x, y)
source('~/GitHub/actuaryr/R/utils.R')
# ex. different number of rows
x <- data.frame(
a = rep(1, 2),
b = rep(2, 2),
c = rep(3, 2)
)
y <- data.frame(
a = rep(1, 3),
b = rep(2, 3),
c = rep(3, 3)
)
compare(x, y)
source('~/GitHub/actuaryr/R/utils.R')
# ex. different number of rows
x <- data.frame(
a = rep(1, 2),
b = rep(2, 2),
c = rep(3, 2)
)
y <- data.frame(
a = rep(1, 3),
b = rep(2, 3),
c = rep(3, 3)
)
compare(x, y)
# ex. logicals
x <- data.frame(
a = c(TRUE, FALSE)
)
y <- data.frame(
a = c(FALSE, FALSE)
)
compare(x, y)
x
nrow(x)
x
# ex. logicals
x <- data.frame(
a = c(TRUE, FALSE)
)
y <- data.frame(
a = c(FALSE, FALSE)
)
tables <- list(x = x, y = y)
tables <- .coerceToCharacter(tables) # factors, POSIXct and Dates are not handled
tables <- .getCommonColumns(tables)
tables <- .getCommonNrRows(tables)
tables <- .getCommonTypes(tables)
x <- tables$x
y <- tables$y
n1 <- nrow(x)
n2 <- nrow(y)
n1
# ex. logicals
x <- data.frame(
a = c(TRUE, FALSE)
)
y <- data.frame(
a = c(FALSE, FALSE)
)
tables <- list(x = x, y = y)
tables <- .coerceToCharacter(tables) # factors, POSIXct and Dates are not handled
tables
tables <- .getCommonColumns(tables)
tables
tables <- .getCommonNrRows(tables)
tables
tables
tables$x
tables[[x]]
tables[["x"]]
tables[[1]]
tables[1]
tables[1]$x
x <- as.data.frame(tables$x)
x
# ex. logicals
x <- data.frame(
a = c(TRUE, FALSE)
)
y <- data.frame(
a = c(FALSE, FALSE)
)
x
y
tables <- list(x = x, y = y)
tables
tables#x
tables$x
tables$x$a
# ex. logicals
x <- data.frame(
a = c(TRUE, FALSE)
)
y <- data.frame(
a = c(FALSE, FALSE)
)
tables <- list(x = x, y = y)
tables <- .coerceToCharacter(tables) # factors, POSIXct and Dates are not handled
tables
tables <- .getCommonColumns(tables)
tables
source('~/GitHub/actuaryr/R/utils.R')
# ex. logicals
x <- data.frame(
a = c(TRUE, FALSE)
)
y <- data.frame(
a = c(FALSE, FALSE)
)
compare(x, y)
tables <- list(x = x, y = y)
tables <- .coerceToCharacter(tables) # factors, POSIXct and Dates are not handled
tables <- .getCommonColumns(tables)
tables <- .getCommonNrRows(tables)
tables <- .getCommonTypes(tables)
x <- tables$x
y <- tables$y
result <- x
for(j in 1:ncol(x)) {
if(typeof(x[, j]) == "character") {
result[, j] <- purrr::map2_chr(x[, j], y[, j], function(c.x, c.y) {
if(c.x == c.y) "the_same" else "different"
})
} else {
result[, j] <- x[, j] - y[, j]
}
}
result
compare(1:3, 1:2)
?inherits
source('~/GitHub/actuaryr/R/compare.R')
compare(1:3, 1:2)
# ex. the same - numericals
x <- data.frame(
a = rep(1, 3),
b = rep(2, 3),
c = rep(3, 3)
)
y <- data.frame(
a = rep(1, 3),
b = rep(2, 3),
c = rep(3, 3)
)
compare(x, y)
# ex. the same - strings
x <- data.frame(a = letters[1:3],
b = letters[4:6],
stringsAsFactors = FALSE)
y <- data.frame(a = letters[1:3],
b = letters[4:6],
stringsAsFactors = FALSE)
compare(x, y)
# ex. the same - factors
x <- data.frame(a = letters[1:3],
b = letters[4:6])
y <- data.frame(a = letters[1:3],
b = letters[4:6])
compare(x, y)
# ex. different amount of columns
x <- data.frame(
a = rep(1, 3),
b = rep(2, 3),
c = rep(3, 3)
)
y <- data.frame(
a = rep(1, 3),
b = rep(2, 3)
)
compare(x, y)
# ex. factors / Dates / POSIXct
x <- data.frame(a = 1:3,
b = 4:6)
y <- data.frame(a = letters[1:3],
b = letters[4:6])
compare(x, y)
# ex. different number of rows
x <- data.frame(
a = rep(1, 2),
b = rep(2, 2),
c = rep(3, 2)
)
# ex. factors / Dates / POSIXct
x <- data.frame(a = 1:3,
b = 4:6)
y <- data.frame(a = letters[1:3],
b = letters[4:6])
compare(x, y)
source('~/GitHub/actuaryr/R/utils.R')
# ex. different number of rows
x <- data.frame(
a = rep(1, 2),
b = rep(2, 2),
c = rep(3, 2)
)
y <- data.frame(
a = rep(1, 3),
b = rep(2, 3),
c = rep(3, 3)
)
compare(x, y)
# ex. factors / Dates / POSIXct
x <- data.frame(a = 1:3,
b = 4:6)
y <- data.frame(a = letters[1:3],
b = letters[4:6])
compare(x, y)
source('~/GitHub/actuaryr/R/utils.R')
source('~/GitHub/actuaryr/R/utils.R')
# ex. factors / Dates / POSIXct
x <- data.frame(a = 1:3,
b = 4:6)
y <- data.frame(a = letters[1:3],
b = letters[4:6])
compare(x, y)
# ex. different number of rows
x <- data.frame(
a = rep(1, 2),
b = rep(2, 2),
c = rep(3, 2)
)
y <- data.frame(
a = rep(1, 3),
b = rep(2, 3),
c = rep(3, 3)
)
compare(x, y)
# ex. logicals
x <- data.frame(
a = c(TRUE, FALSE)
)
y <- data.frame(
a = c(FALSE, FALSE)
)
compare(x, y)
compare(1:3, 1:2)
library(actuaryr)
compare <- function(x, y) {
if(!inherits(x, "data.frame")) {stop("x must be a data frame.")}
if(!inherits(y, "data.frame")) {stop("y must be a data frame.")}
tables <- list(x = x, y = y)
tables <- .coerceToCharacter(tables) # factors, POSIXct and Dates are not handled
tables <- .getCommonColumns(tables)
tables <- .getCommonNrRows(tables)
tables <- .getCommonTypes(tables)
x <- tables$x
y <- tables$y
result <- x
for(j in 1:ncol(x)) {
if(typeof(x[, j]) == "character") {
result[, j] <- purrr::map2_chr(x[, j], y[, j], function(c.x, c.y) {
if(c.x == c.y) "the_same" else "different"
})
} else {
result[, j] <- x[, j] - y[, j]
}
}
return(result)
}
document()
library(devtools)
document()
devtools::load_all(".")
?compare
devtools::load_all(".")
source('~/GitHub/actuaryr/R/utils.R')
